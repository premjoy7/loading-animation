{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mjs","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @private\n * @param {string | string[]} fontFace\n * @param {string} fontStyle\n * @param {number} fontSize\n * @param {number} precision\n * @param {string} defaultFontFace\n * @returns {string}\n */\nexport function getFontSetting(fontFace, fontStyle, fontSize, precision, defaultFontFace) {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isZeroWidthSpace(space) {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param {string} space\n * @returns {boolean}\n */\nexport function isSpace(space) {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param {RegExp} tokenRegex\n * @param {string} text\n * @returns {string[]}\n */\nexport function tokenizeString(tokenRegex, text) {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i], delimeters[i])\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {string} word\n * @param {number} space\n * @returns\n */\nexport function measureText(context, word, space = 0) {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {string} text\n * @param {number} wordWrapWidth\n * @param {number} letterSpacing\n * @param {number} indent\n * @returns\n */\nexport function wrapText(context, text, wordWrapWidth, letterSpacing, indent) {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines = [];\n    let realNewlines = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i].split(spaceRegex);\n        let spaces = lines[i].match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j];\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace')\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index < this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if (index < this._items.length) {\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n                }\n\n                const prevItem = this._items[index];\n\n                // Doesn't exist yet: overwrite current.\n                this._items[index] = item;\n\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n\n                this.onSet(item, index, prevItem);\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource ? this.__core.displayedTextureSource._source : null;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onError = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","obj1","obj2","isObject","type","isPlainObject","constructor","index","arr","getModuloIndex","len","ceil","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_classCallCheck","_layout","_totalCrossAxisSize","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","getTotalMargin","getMarginOffset","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","setParent","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removeChildAt","removeChildren","syncChildren","removed","added","order","fromIndex","toIndex","isEstimate","arguments","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","relX","relY","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","once","removeListener","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_super","call","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","concat","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_step2","_iterator2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","lastLineText","filter","_suffix","_step5","_iterator5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","parsed","_step11","_iterator11","applyFontStyle","_step12","_iterator12","breakIndex","totalWidth","_step13","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","addChildAt","gc","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","setRef","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","create","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","key","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","_hasMember","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","apply","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","_inherits","StateMachineRouter","_createSuper","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_focusChange","_getFocused","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","coords","getRenderTextureCoords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueClone","setUniformValue","glFunction","_valueEquals","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","_getBytesPerPixel","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","setSimpleTc","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","pvrHeaderLength","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","handleKtxLoad","handlePvrLoad","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","getHrTime","performance","now","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","change","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","$enable","setFlag","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","normalized","stride","$activeTexture","setPixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csx","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","createWebGLContext","createCanvasContext","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","nextFrame","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_unfocus","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","returnValue","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_super2","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_super3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_super4","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","_createClass","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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6vB,GAAe/lC,qBAAf,u/CCjDA,IAAMwmC,GAAY,CACdhY,eACA16B,YACA7+C,OACAxD,MAAAA,EACArE,aACAozC,UACA6zC,SACAlR,SACA5sD,cACAjC,oBACA+S,UACA/C,eACAmiE,QAAS,CACLC,UAAW1G,GACX2G,QAAS7L,GACT8L,UAAWrG,GACXsG,aAAclG,GACdmG,UAAWpF,GACXqF,WAAYrM,GACZsM,QAASrF,GACTsF,SAAU7E,GACV8E,aAAc1E,GACd2E,iBAAkBxE,GAClByE,SAAUrB,GACVsB,QAAS/D,GACTgE,KAAMnD,GACNoD,SAAU9D,GACV+D,QAAS3D,GACT4D,eAAgBrD,GAChBsD,QAAS/C,GACTgD,YAAa/B,GACbgC,UAAW/B,GACXxjC,cACA+9B,mBAAAA,EACA12B,aACA42B,iBAAAA,GACAvzB,IAAK,CACD25B,UAAWvG,GACX0H,KAAM/L,KAGdrtE,SAAU,CACN69D,oBACAwK,gBACAp/C,cACA5M,eACAosD,eACAmB,iBACArE,uBACAl5C,iBAEJgtD,WAAY,CACR7M,qBACA0C,kBACAG,wBACAW,mBACAnG,kBAEJyP,MAAO,CACHnS,aACAe,mBACAC,8BAIJnlF,EAAM6C,QACNC,OAAOyzF,IAAMxB"}